{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cur",
				"currentPoint"
			],
			[
				"puntos",
				"puntosCometa"
			],
			[
				"star",
				"starPosition"
			],
			[
				"wi",
				"width"
			],
			[
				"OR",
				"ORIGINAL_WIDTH"
			],
			[
				"pos",
				"positionY"
			],
			[
				"posit",
				"positionX"
			],
			[
				"loa",
				"loadAudios"
			],
			[
				"create",
				"createPointSprites"
			],
			[
				"win",
				"winSound"
			],
			[
				"loo",
				"looseSound"
			],
			[
				"sou",
				"okSound"
			],
			[
				"srp",
				"spritesDibujo"
			],
			[
				"sprites",
				"spritesDibujo"
			],
			[
				"SCO",
				"SCORE_LABEL"
			],
			[
				"sco",
				"score"
			],
			[
				"SC",
				"SCORE_TO_ADD"
			],
			[
				"corre",
				"correctPoint"
			],
			[
				"punto",
				"puntosCometa"
			],
			[
				"se",
				"secondPoint"
			],
			[
				"cu",
				"currentPoint"
			],
			[
				"pun",
				"puntosCometa"
			]
		]
	},
	"buffers":
	[
		{
			"file": "www/index.html",
			"settings":
			{
				"buffer_size": 566,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "www/config.xml",
			"settings":
			{
				"buffer_size": 637,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "www/js/juego.js",
			"settings":
			{
				"buffer_size": 14050,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/css/style.css",
			"settings":
			{
				"buffer_size": 103,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "body{"
			}
		},
		{
			"contents": "var game = new Phaser.Game(800, 600, Phaser.AUTO, '', { preload: preload, create: create, update: update, render: render });\n\n// array con las posiciones de los puntos del dibujo\nvar puntosCometa;\n\n// sprite jugador y sprites del dibujo\nvar player;\nvar dibujo;\n\n// primer punto para dibujar las lineas entre puntos\nvar firstPoint; \n\n// el grafico para pintar la linea entre dos puntos\nvar graphics;\n\n// variable que indica cual sera, dentro del array de puntos, el siguiente punto valido con el que colisionar\nvar currentPoint;\n\nvar score;\n\n// puntuacion minima y puntuaciones a sumar o restar en funcion de si el jugador pinta bien o no cada linea\nvar MIN_SCORE = 0;\nvar SCORE_TO_ADD = 100;\nvar SCORE_TO_DECREMENT = 25;\n\nfunction preload() {\n\n    game.stage.backgroundColor = '#85b5e1';\n\n    game.load.baseURL = 'http://examples.phaser.io/assets/';\n    game.load.crossOrigin = 'anonymous';\n\n    // imagenes\n    game.load.image('player', 'sprites/phaser-dude.png');\n    game.load.image('aqua_ball', 'sprites/aqua_ball.png');\n    game.load.image('purple_ball', 'sprites/purple_ball.png');\n    game.load.image('green_ball', 'sprites/green_ball.png');\n    \n    // posiciones del dibujo\n    puntosCometa = [\n        {'x':240, 'y':380, 'sprite':'purple_ball'},     \n        {'x':235, 'y':320, 'sprite':'purple_ball'},  \n        {'x':230, 'y':240, 'sprite':'purple_ball'},  \n        {'x':225, 'y':180, 'sprite':'purple_ball'},  \n        {'x':220, 'y':88, 'sprite':'purple_ball'}, \n\n        {'x':270, 'y':65, 'sprite':'aqua_ball'},  \n        {'x':310, 'y':50, 'sprite':'aqua_ball'},  \n        {'x':355, 'y':30, 'sprite':'aqua_ball'}, \n         \n        {'x':425, 'y':0, 'sprite':'aqua_ball'}, \n        {'x':440, 'y':45, 'sprite':'aqua_ball'},  \n        {'x':460, 'y':105, 'sprite':'aqua_ball'},  \n        {'x':485, 'y':180, 'sprite':'aqua_ball'}, \n\n        {'x':430, 'y':225, 'sprite':'purple_ball'},  \n        {'x':380, 'y':265, 'sprite':'purple_ball'},  \n        {'x':325, 'y':310, 'sprite':'purple_ball'},  \n         {'x':240, 'y':380, 'sprite':'purple_ball'},\n\n        {'x':224, 'y':415, 'sprite':'green_ball'},  \n        {'x':220, 'y':455, 'sprite':'green_ball'},  \n        {'x':225, 'y':500, 'sprite':'green_ball'},  \n        {'x':255, 'y':530, 'sprite':'green_ball'},  \n        {'x':290, 'y':515, 'sprite':'green_ball'},  \n        {'x':315, 'y':490, 'sprite':'green_ball'},  \n        {'x':350, 'y':455, 'sprite':'green_ball'},  \n        {'x':365, 'y':485, 'sprite':'green_ball'},  \n        {'x':365, 'y':510, 'sprite':'green_ball'},  \n        {'x':365, 'y':550, 'sprite':'green_ball'},  \n        {'x':380, 'y':575, 'sprite':'green_ball'},  \n        {'x':425, 'y':565, 'sprite':'green_ball'},  \n        {'x':450, 'y':565, 'sprite':'green_ball'},\n        {'x':475, 'y':565, 'sprite':'green_ball'}\n    ];\n\n    // inicializar el puntero que indicara el siguiente punto a colisionar\n    currentPoint = 0;\n\n    // score inicial\n    score = 0;\n}\n\nfunction create() {\n\n    player = game.add.sprite(100, 200, 'player');\n\n    game.physics.arcade.enable(player);\n\n    player.body.collideWorldBounds = true;\n    game.physics.enable(player, Phaser.Physics.ARCADE);\n\n    dibujo = game.add.physicsGroup();\n\n    // preparar los puntos del dibujo\n    var point\n    for(point in puntosCometa){\n        var sprite = dibujo.create(puntosCometa[point]['x'], puntosCometa[point]['y'], puntosCometa[point]['sprite']);\n        game.physics.arcade.enable(sprite);\n        sprite.body.collideWorldBounds = true;\n    }\n\n    // on collide action\n    player.body.onCollide = new Phaser.Signal();\n    player.body.onCollide.add(drawLine, this);\n\n    dibujo.setAll('body.immovable', true);\n\n    // preparar el grafico para pintar las lineas\n    graphics = game.add.graphics(0,0);\n    graphics.lineStyle(1, 0x0088FF, 1);\n\n}\n\nfunction update () {\n\n   game.physics.arcade.collide(player, dibujo);\n\n    //  mover el jugador con el raton\n    game.physics.arcade.moveToPointer(player, 400);\n    if (Phaser.Rectangle.contains(player.body, game.input.x, game.input.y))\n    {\n        player.body.velocity.setTo(0, 0);\n    }\n}\n\nfunction drawLine(player, point){\n\n    var correctPoint = false;\n\n    // pintar la linea entre dos puntos, cuando haya colisionado con dos puntos\n    if(undefined === firstPoint && puntosCometa[currentPoint]['x'] === point.position.x && puntosCometa[currentPoint]['y'] === point.position.y){\n        firstPoint = point.position;\n        correctPoint = true;\n    }else if(undefined != firstPoint){\n        var secondPoint = point.position;\n\n        // si los dos puntos son los correspondientes en la lista de puntos del dibujo, se puede dibujar la linea\n        if(puntosCometa[currentPoint]['x'] === firstPoint.x && puntosCometa[currentPoint]['y'] === firstPoint.y \n            && puntosCometa[currentPoint+1]['x'] === secondPoint.x && puntosCometa[currentPoint+1]['y'] === secondPoint.y){\n            graphics.moveTo(firstPoint.x, firstPoint.y);\n            graphics.lineTo(secondPoint.x, secondPoint.y);\n            console.log(\"Pintando linea entre (\" + firstPoint.x + \",\" + firstPoint.y + \") y (\" + secondPoint.x + \",\" + secondPoint.y+\"). CurrentPoint \" + currentPoint);\n\n            firstPoint = secondPoint;\n\n            currentPoint++;\n\n            correctPoint = true;\n        }\n    }\n\n    // deshabilitar el punto y sumar puntuacion al usuario\n    if(correctPoint){\n        point.body.enable = false;  \n        score += SCORE_TO_ADD;      \n    }else{\n        score -= SCORE_TO_DECREMENT;\n    }\n}\n\nfunction render () {\n}",
			"settings":
			{
				"buffer_size": 5515,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "var game = new Phaser.Game(800, 600, Phaser.CANVAS, 'phaser-example', { preload: preload, create: create });\n\n//  The Google WebFont Loader will look for this object, so create it before loading the script.\nWebFontConfig = {\n\n    //  'active' means all requested fonts have finished loading\n    //  We set a 1 second delay before calling 'createText'.\n    //  For some reason if we don't the browser cannot render the text the first time it's created.\n    active: function() { game.time.events.add(Phaser.Timer.SECOND, createText, this); },\n\n    //  The Google Fonts we want to load (specify as many as you like in the array)\n    google: {\n      families: ['Finger Paint']\n    }\n\n};\n\nvar text;\n\nfunction preload() {\n\n    game.load.image('bg', 'assets/skies/deepblue.png');\n\n    //  Load the Google WebFont Loader script\n    game.load.script('webfont', '//ajax.googleapis.com/ajax/libs/webfont/1.4.7/webfont.js');\n\n}\n\nfunction create() {\n\n    game.add.image(0, 0, 'bg');\n\n}\n\nfunction createText() {\n\n    //  You can either set the tab size in the style object:\n    var style = { font: \"28px Finger Paint\", fill: \"#fff\", tabs: [ 150, 150, 200 ] };\n\n    text = game.add.text(32, 64, \"Armor\\tSpells\\tDamage\\tWeapons\", style);\n    text.setShadow(-3, 3, 'rgba(0,0,0,0.5)', 0);\n\n    var text2 = game.add.text(32, 180, \"100\\tFire\\t+50\\tAxe\\n67\\tIce\\t+23\\tStaff\", style);\n    text2.setShadow(-3, 3, 'rgba(0,0,0,0.5)', 0);\n\n}",
			"settings":
			{
				"buffer_size": 1415,
				"line_ending": "Windows",
				"name": "var game = new Phaser.Game(800, 600, Phaser.CANVAS"
			}
		},
		{
			"contents": "\n     \n\n{'x':240, 'y':380, 'sprite':'purple_ball'},     \n{'x':235, 'y':320, 'sprite':'purple_ball'},  \n{'x':230, 'y':240, 'sprite':'purple_ball'},  \n{'x':225, 'y':180, 'sprite':'purple_ball'},  \n{'x':220, 'y':88, 'sprite':'purple_ball'}, \n\n{'x':270, 'y':65, 'sprite':'aqua_ball'},  \n{'x':310, 'y':50, 'sprite':'aqua_ball'},  \n{'x':355, 'y':30, 'sprite':'aqua_ball'}, \n \n{'x':425, 'y':0, 'sprite':'aqua_ball'}, \n{'x':440, 'y':45, 'sprite':'aqua_ball'},  \n{'x':460, 'y':105, 'sprite':'aqua_ball'},  \n{'x':485, 'y':180, 'sprite':'aqua_ball'}, \n\n{'x':430, 'y':225, 'sprite':'purple_ball'},  \n{'x':380, 'y':265, 'sprite':'purple_ball'},  \n{'x':325, 'y':310, 'sprite':'purple_ball'},  \n\n{'x':224, 'y':415, 'sprite':'green_ball'},  \n{'x':220, 'y':455, 'sprite':'green_ball'},  \n{'x':225, 'y':500, 'sprite':'green_ball'},  \n{'x':255, 'y':530, 'sprite':'green_ball'},  \n{'x':290, 'y':515, 'sprite':'green_ball'},  \n{'x':315, 'y':490, 'sprite':'green_ball'},  \n{'x':350, 'y':455, 'sprite':'green_ball'},  \n{'x':365, 'y':485, 'sprite':'green_ball'},  \n{'x':365, 'y':510, 'sprite':'green_ball'},  \n{'x':365, 'y':550, 'sprite':'green_ball'},  \n{'x':380, 'y':575, 'sprite':'green_ball'},  \n{'x':425, 'y':565, 'sprite':'green_ball'},  \n{'x':450, 'y':565, 'sprite':'green_ball'},  \n{'x':460, 'y':600, 'sprite':'green_ball'}, \n{'x':460, 'y':610, 'sprite':'green_ball'}\n\n\n\n\n\n{'x':425, 'y':0, 'sprite':'aqua_ball'}, {'x':440, 'y':45, 'sprite':'aqua_ball'},  {'x':460, 'y':105, 'sprite':'aqua_ball'},  {'x':485, 'y':180, 'sprite':'aqua_ball'},      {'x':430, 'y':225, 'sprite':'purple_ball'},  {'x':380, 'y':265, 'sprite':'purple_ball'},  {'x':325, 'y':310, 'sprite':'purple_ball'},  {'x':240, 'y':380, 'sprite':'purple_ball'},      {'x':235, 'y':320, 'sprite':'purple_ball'},  {'x':230, 'y':240, 'sprite':'purple_ball'},  {'x':225, 'y':180, 'sprite':'purple_ball'},  {'x':220, 'y':88, 'sprite':'purple_ball'},      {'x':270, 'y':65, 'sprite':'aqua_ball'},  {'x':310, 'y':50, 'sprite':'aqua_ball'},  {'x':355, 'y':30, 'sprite':'aqua_ball'},  {'x':224, 'y':415, 'sprite':'green_ball'},  {'x':220, 'y':455, 'sprite':'green_ball'},  {'x':225, 'y':500, 'sprite':'green_ball'},  {'x':255, 'y':530, 'sprite':'green_ball'},  {'x':290, 'y':515, 'sprite':'green_ball'},  {'x':315, 'y':490, 'sprite':'green_ball'},  {'x':350, 'y':455, 'sprite':'green_ball'},  {'x':365, 'y':485, 'sprite':'green_ball'},  {'x':365, 'y':510, 'sprite':'green_ball'},  {'x':365, 'y':550, 'sprite':'green_ball'},  {'x':380, 'y':575, 'sprite':'green_ball'},  {'x':425, 'y':565, 'sprite':'green_ball'},  {'x':450, 'y':565, 'sprite':'green_ball'},  {'x':460, 'y':600, 'sprite':'green_ball'},  {'x':460, 'y':610, 'sprite':'green_ball'}",
			"settings":
			{
				"buffer_size": 2679,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/exercises/miriadax/app_movil_phonegap/juegu/juegu/www",
		"/C/exercises/miriadax/app_movil_phonegap/juegu/juegu/www/assets",
		"/C/exercises/miriadax/app_movil_phonegap/juegu/juegu/www/assets/sprites",
		"/C/exercises/miriadax/app_movil_phonegap/juegu/juegu/www/js"
	],
	"file_history":
	[
		"/C/exercises/miriadax/app_movil_phonegap/juegu/juegu/platforms/android/android.json",
		"/C/exercises/miriadax/app_movil_phonegap/juegu/juegu/platforms/platforms.json",
		"/C/exercises/miriadax/app_movil_phonegap/juegu/juegu/config.xml",
		"/C/exercises/miriadax/app_movil_phonegap/juegu/juegu/www/config.xml",
		"/C/Users/saraz/Downloads/MOOC-game/config.xml",
		"/C/exercises/miriadax/app_movil_phonegap/modulo_1/Gestos/www/index.html",
		"/C/exercises/miriadax/app_movil_phonegap/modulo_1/Gestos/www/cordova.js",
		"/C/exercises/miriadax/app_movil_phonegap/juegu/juegu/www/cordova.js",
		"/C/exercises/miriadax/app_movil_phonegap/juegu/juegu/www/js/phaser.min.js"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"firstPointHit",
			"manageScore",
			"score",
			"/>\n",
			"sprite",
			"star",
			"textScore",
			"text",
			"drawline",
			"starPosition",
			"createPlayerSprite",
			"player",
			"star",
			"collide",
			"drawLine",
			"enable",
			"player",
			"update",
			"drawLine",
			"vigilaSensores",
			"SCORE_LABEL",
			"drawLine",
			"enable",
			"failSound",
			"okSound",
			"lol",
			"myBitmap",
			"drawLine",
			"LOOSE_MESSAGE",
			"MIN_SCORE",
			"SCORE_LABEL",
			"SCORE_TO_DECREMENT",
			"{'x':450, 'y':565, 'sprite':'green_ball'}",
			"325",
			"235",
			"graphics"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"gradient",
			"bitMap"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "www/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 566,
						"regions":
						{
						},
						"selection":
						[
							[
								269,
								269
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "www/config.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 637,
						"regions":
						{
						},
						"selection":
						[
							[
								519,
								527
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "www/js/juego.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14050,
						"regions":
						{
						},
						"selection":
						[
							[
								11785,
								11785
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5460.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "www/css/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 103,
						"regions":
						{
						},
						"selection":
						[
							[
								103,
								103
							]
						],
						"settings":
						{
							"auto_name": "body{",
							"syntax": "Packages/CSS/CSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5515,
						"regions":
						{
						},
						"selection":
						[
							[
								793,
								890
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 481.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1415,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								1415
							]
						],
						"settings":
						{
							"auto_name": "var game = new Phaser.Game(800, 600, Phaser.CANVAS",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2679,
						"regions":
						{
						},
						"selection":
						[
							[
								1351,
								8
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "juegu.sublime-project",
	"replace":
	{
		"height": 80.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 269.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
